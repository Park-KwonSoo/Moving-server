syntax = "proto3";

package v1.playlist_proto;

option go_package = "github.com/Park-Kwonsoo/Moving-server/api/protos/v1/playlist";

import "api/protos/google/api/annotations.proto";

service PlaylistService {
    //내 플레이리스트 목록 조회
    rpc GetMyPlaylist(GetMyPlaylistReq) returns (GetMyPlaylistRes) {
        option (google.api.http) = {
            get : "/playlist"
        };
    };

    //특정 플레이리스트 조회
    rpc GetSpecificPlaylist(GetSpecificPlaylistReq) returns (GetSpecificPlaylistRes) {
        option (google.api.http) = {
            get : "/playlist/{playlistId}"
        };
    };

    //새 플레이리스트 생성
    rpc CreateNewPlaylist(CreateNewPlaylistReq) returns (CreateNewPlaylistRes) {
        option (google.api.http) = {
            post : "/playlist"
            body : "*"
        };
    };

    //기존 플레이리스트 정보 업데이트
    rpc UpdatePlaylist(UpdatePlaylistReq) returns (UpdatePlaylistRes) {
        option (google.api.http) = {
            patch : "/playlist/{playlistId}"
            body : "*"
        };
    };

    //특정 플레이리스트에 곡 추가
    rpc AddNewMusicInPlaylist(AddNewMusicInPlaylistReq) returns (AddNewMusicInPlaylistRes) {
        option (google.api.http) = {
            patch : "/playlist/add-music/{playlistId}"
            body : "*"
        };
    };

    //특정 플레이리스트에서 곡 제거
    rpc RemoveMusicInPlaylist(RemoveMusicInPlaylistReq) returns (RemoveMusicInPlaylistRes) {
        option (google.api.http) = {
            post : "/playlist/remove-music/{playlistId}"
            body : "*"
        };
    };

    //플레이리스트에 좋아요 기능 : 플레이리스트의 주인이 아닌 사람만 좋아요가 가능함.
    rpc LikePlaylist(LikePlaylistReq) returns (LikePlaylistRes) {
        option (google.api.http) = {
            post : "/playlist/like/{playlistId}"
        };
    };
}

message SimplePlaylist {
    string id = 1;
    uint64 numOfMusics = 2;
    string createdAt = 3;
    string updatedAt = 4;
    string playlistName = 5;
}

message GetMyPlaylistReq {
}

message GetMyPlaylistRes {
    string rsltCd = 1;
    string rsltMsg = 2;
    repeated SimplePlaylist myPlaylist = 3;
}


message Music {
    string musicId = 1;
    uint64 trackNumber = 2;

    string title = 3;
    string artist = 4;
    string album = 5;
    string genre = 6;
    string albumImg = 7;
    string musicUrl = 8;

    bool isTitle = 9;
}

message SpecificPlaylist {
    string id = 1;
    string createdAt = 2;
    string updatedAt = 3;
    string playlistName = 4;
    uint64 numOfLike = 5;
    repeated Music musicList = 6;
}

message GetSpecificPlaylistReq {
    string playlistId = 1;
}

message GetSpecificPlaylistRes {
    string rsltCd = 1;
    string rsltMsg = 2;
    SpecificPlaylist playlist = 3;
}


message CreateNewPlaylistReq {
    string playlistName = 1;
}

message CreateNewPlaylistRes {
    string rsltCd = 1;
    string rsltMsg = 2;
}


message UpdatePlaylistReq {
    string playlistName = 1;
    string playlistId = 2;
}

message UpdatePlaylistRes {
    string rsltCd = 1;
    string rsltMsg = 2;
}


message AddNewMusicInPlaylistReq {
    string playlistId = 1;
    repeated string musicIdList = 2;
}

message AddNewMusicInPlaylistRes {
    string rsltCd = 1;
    string rsltMsg = 2;
}


message RemoveMusicInPlaylistReq {
    string playlistId = 1;
    repeated string musicIdList = 2;
}

message RemoveMusicInPlaylistRes {
    string rsltCd = 1;
    string rsltMsg = 2;
}

message LikePlaylistReq {
    string playlistId = 1;
}

message LikePlaylistRes {
    string rsltCd = 1;
    string rsltMsg = 2;
}